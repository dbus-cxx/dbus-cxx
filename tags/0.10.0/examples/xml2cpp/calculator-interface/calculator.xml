<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node gen-namespace="DBus::Example" orig-namespace="Examples"
      cppname="Calculator" cppinclude="&quot;calculator.h&quot;"
      other-proxy-parents="::Examples::CalculatorInterface;"
      other-proxy-parent-includes="&quot;calculator_interface.h&quot;;"
      dest="dbuscxx.example.calculator.server" path="/dbuscxx/example/Calculator" >
  <interface name="Calculator.Basic">
    <method name="add" const="1" virtual="1">
      <arg name="result" direction="out" type="d"/>
      <arg name="a" direction="in" type="d"/>
      <arg name="b" direction="in" type="d"/>
    </method>
    <method name="sub" cppname="subtract" const="1" virtual="1">
      <arg name="result" direction="out" type="d"/>
      <arg name="a" direction="in" type="d"/>
      <arg name="b" direction="in" type="d"/>
    </method>
    <method name="mul" cppname="multiply" const="1" virtual="1">
      <arg name="result" direction="out" type="d"/>
      <arg name="a" direction="in" type="d"/>
      <arg name="b" direction="in" type="d"/>
    </method>
    <method name="div" cppname="divide" const="1" virtual="1">
      <arg name="result" direction="out" type="d"/>
      <arg name="a" direction="in" type="d"/>
      <arg name="b" direction="in" type="d"/>
    </method>
    <method name="pi" const="1" virtual="1">
      <arg name="result" direction="out" type="d"/>
    </method>
    <method name="print_pi" const="1" virtual="1">
    </method>
    <method name="name" const="1" virtual="1">
      <arg name="n" direction="out" type="s"/>
    </method>
    <method name="set_name" virtual="1">
      <arg name="name" direction="in" type="s" const="1" ref="1"/>
    </method>
    <signal name="calculation" accessor="signal_calculation()">
      <arg name="op" type="s"/>
      <arg name="opsym" type="s"/>
      <arg name="result" type="d"/>
      <arg name="a" type="d"/>
      <arg name="b" type="d"/>
    </signal>
  </interface>
  <interface name="Calculator.Computed">
    <method name="factorial" const="1" virtual="1">
      <arg name="result" direction="out" type="t"/>
      <arg name="n" direction="in" type="y"/>
    </method>
    <method name="fibonacci" const="1" virtual="1">
      <arg name="result" direction="out" type="t"/>
      <arg name="n" direction="in" type="y"/>
    </method>
    <method name="thue_morse" const="1" virtual="1">
      <arg name="result" direction="out" type="t"/>
      <arg name="n" direction="in" type="y"/>
    </method>
    <signal name="computation" accessor="signal_computation()">
      <arg name="algorithm" type="s"/>
      <arg name="result" type="t"/>
      <arg name="n" type="y"/>
    </signal>
  </interface>
</node>
